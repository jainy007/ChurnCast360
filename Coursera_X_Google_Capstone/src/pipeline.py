# pipeline.py

import subprocess


def run_script(script_path):
    print(f"\nRunning: {script_path}")
    result = subprocess.run(["python", script_path], capture_output=True, text=True)
    print(result.stdout)
    if result.stderr:
        print(f"Errors in {script_path}:\n", result.stderr)


def generate_report():
    with open("report.md", "w") as f:
        f.write("# Employee Attrition Analysis Report\n\n")
        f.write("## Overview\n")
        f.write(
            "This report summarizes the findings of the employee attrition analysis for Sailfort Motors.\n\n"
        )
        f.write("## Data Cleaning & Preparation\n")
        f.write("- Missing values: Checked\n")
        f.write("- Duplicates: Checked\n")
        f.write("- Outliers: Checked\n")
        f.write("- Column names standardized \n\n")
        f.write("## Exploratory Data Analysis\n")
        f.write("### Satisfaction Level Distribution\n")
        f.write("![Satisfaction Level](images/eda_satisfaction_level.png)\n\n")
        f.write("### Average Monthly Hours Distribution\n")
        f.write("![Average Monthly Hours](images/eda_monthly_hours.png)\n\n")
        f.write("### Correlation Matrix\n")
        f.write("![Correlation Matrix](images/correlation_matrix.png)\n\n")
        f.write("### Employee Left by Salary Level\n")
        f.write("![Left by Salary](images/left_by_salary.png)\n\n")
        f.write("### Employee Left by Department\n")
        f.write("![Left by Department](images/left_by_department.png)\n\n")
        f.write("## Model Performance\n")
        f.write("### Confusion Matrix\n")
        f.write("![Confusion Matrix](images/confusion_matrix.png)\n\n")
        f.write("### ROC Curve\n")
        f.write("![ROC Curve](images/roc_curve.png)\n\n")
        f.write("## Conclusion & Recommendations\n")
        f.write("- The model shows excellent performance with an AUC of 0.99.\n")
        f.write("- Precision: 0.99, Recall: 0.96, Accuracy: 0.99, F1 Score: 0.97.\n")
        f.write(
            "- HR team can use this model to proactively identify employees at risk of leaving.\n"
        )
        f.write("- Recommend quarterly retraining of the model.\n")
        f.write(
            "- Suggested next steps: feature importance analysis, integration with HR systems.\n"
        )
        f.write("\n---\n")
        f.write("_Report auto-generated by pipeline.py_\n")


if __name__ == "__main__":
    scripts = ["src/plan.py", "src/analyze.py", "src/construct.py", "src/execute.py"]

    for script in scripts:
        run_script(script)

    generate_report()
    print("\nPipeline complete! Report saved as report.md")
